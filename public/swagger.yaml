openapi: 3.0.0
info:
  title: 'API Beber √Ågua'
  contact:
    name: 'Matheus Mazoni'
    email: matheus.andrade16@fatec.sp.gov.br
  version: 1.0.0
servers:
  -
    url: 'https://monitorar-agua.herokuapp.com/'
paths:
  /login:
    post:
      tags:
        - users
      summary: 'JWT Login'
      description: 'If the email and password are correct, it authenticates.'
      operationId: login
      requestBody:
        description: 'User email and password.'
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: 'User email'
                  type: string
                  format: email
                password:
                  description: 'User password'
                  type: string
                  format: password
              type: object
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: 'Resource not found.'
  /users:
    post:
      tags:
        - users
      summary: 'Register a user'
      operationId: signup
      requestBody:
        description: 'User information.'
        required: true
        content:
          application/json:
            schema:
              properties:
                email:
                  description: 'User email'
                  type: string
                  format: email
                name:
                  description: 'User name'
                  type: string
                password:
                  description: 'User password'
                  type: string
                  format: password
              type: object
      responses:
        '201':
          description: 'Successful operation'
        '400':
          description: 'User could not be created.'
        '409':
          description: 'Email already exists.'
  '/users/{id}':
    get:
      tags:
        - users
      summary: 'Get a user.'
      operationId: show
      parameters:
        -
          name: id
          in: query
          description: 'The user ID'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      properties:
        id:
          description: 'User ID'
          type: integer
        name:
          description: 'The user name'
          type: string
        email:
          description: 'The user email'
          type: string
        drink_counter:
          description: 'Number of drinks through the day.'
          type: integer
      type: object
